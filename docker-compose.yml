version: "3.8"
services:
  label_studio:
    image: heartexlabs/label-studio:latest
    user: root
    ports:
      - 8508:8080
    volumes:
      - ./data:/label-studio/data
    networks:
      - label_studio_network

  bentoml:
    image: chanelcolgate/yolo_v8_demo:i6kbkuoxostnirek
    # command: > 
    #   bash -c "
    #   if [ ! -d '/tmp/images' ]; then
    #     mkdir /tmp/images
    #   fi"
    # command: sh -c "test -d /tmp/images || mkdir /tmp/images"
    ports:
      - "3000"
    environment:
      - HF_MODEL_ID=linhcuem/checker_TB_yolov8_ver2
      - MODEL_CONF=0.5
      - MODEL_IOU=0.45
    volumes:
      - ./backend/src/images:/tmp/images
    networks:
      - label_studio_network

  redis:
    image: redis:alpine
    volumes:
      - "./data/redis:/data"
    expose:
      - 6379
    networks:
      - label_studio_network

  server:
    # image: chanelcolgate/labelstudioml:3cac81738ebae8afeb2616e1f3a3d9a1e767cbf5
    image: chanelcolgate/labelstudioml:542550389a8bfe3d04f98cdc69d26298894f4dac
    environment:
      - RQ_QUEUE_NAME=default
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - "9092:9090"
    depends_on:
      - redis
    volumes:
      - "./logs:/tmp"
      - "./data/media:/data"
    networks:
      - label_studio_network

  model_server:
    build: ./the_simplest_backend
    image: chanelcolgate/the_simplest_backend:v0
    ports:
      - 9094:9090
    environment:
      - LABEL_STUDIO_HOST=
      - LABEL_STUDIO_API_KEY=
      - HF_MODEL_ID=
      - HF_MODEL_ID_2=
      - HF_DATASET_ID=
      - BENTOML_UDRL=
    volumes:
      - "./data/media:/data"
      - "./roboflow:/tmp"
    networks:
      - label_studio_network
    # shm_size: "12g"
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #       - driver: nvidia
    #         device_ids: ['0']
    #         capabilities: [gpu]

  db:
    image: postgres:13
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_PASSWORD=odoo
      - POSTGRES_USER=odoo
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - db-data:/var/lib/postgresql/data/pgdata
      - "./datasets:/docker-entrypoint-initdb.d"
    networks:
      - label_studio_network

  adminer:
    image: adminer
    depends_on:
      - db
    ports:
      - "8080:8080"
    networks:
      - label_studio_network

  rabbitmq:
    image: rabbitmq:3.12-management
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq-db:/var/lib/rabbitmq
    networks:
      - label_studio_network


  declare:
    image: chanelcolgate/backend:68e29a7850f24fbc77c3ecde5395f29b3c013e37
    container_name: declare
    command: "declare_rabbitmq.py"
    environment:
      DEBUG: false
      DATABASE_HOST: db
      DATABASE_URL: postgres://odoo:odoo@db:5432/vsk
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672/%2F
      SHOW: true
      LIMIT: 300
    depends_on:
      - db
      - rabbitmq
    networks:
      - label_studio_network


  worker:
    image: chanelcolgate/backend:68e29a7850f24fbc77c3ecde5395f29b3c013e37
    restart: always
    command: "worker.py"
    environment:
      DEBUG: false
      DATABASE_HOST: db
      DATABASE_URL: postgres://odoo:odoo@db:5432/vsk
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672/%2F
      BENTOML_URL: http://bentoml:3000/render
      SHOW: true
      LIMIT: 300
    depends_on:
      - db
      - rabbitmq
    networks:
      - label_studio_network


  main:
    image: chanelcolgate/backend:68e29a7850f24fbc77c3ecde5395f29b3c013e37
    container_name: main
    command: "main.py"
    ports:
      - "8000:8000"
    volumes:
      - "${PWD-.}/backend/src/images:/app/src/images"
      - "${PWD-}./backend/src/tmp:/app/src/tmp"
    environment:
      DEBUG: true
      DATABASE_HOST: db
      DATABASE_URL: postgres://odoo:odoo@db:5432/vsk
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672/%2F
      FTP_URL: http://49.156.55.124/raw
      SHOW: true
      LIMIT: 300
    depends_on:
      - db
      - rabbitmq
      - worker
    networks:
      - label_studio_network

  webserver:
    build: './nginx'
    ports:
      - "80:80"
    depends_on:
      - main
    networks:
      - label_studio_network

volumes:
  db-data:
  rabbitmq-db:

networks:
  label_studio_network:

