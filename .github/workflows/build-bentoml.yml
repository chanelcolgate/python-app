name: Lint and build Docker Bentoml

on:
  workflow_dispatch:

jobs:
  # lint:
  #   timeout-minutes: 10
  #   runs-on: windows-2019

  #   steps:
  #   - name: Checkout 
  #     uses: actions/checkout@v3
      
  #   - name: Set up Python
  #     uses: actions/setup-python@v3
  #     with:
  #       python-version: '3.8'
  #   - name: Install dependencies
  #     run: |
  #       python -m pip install --upgrade pip
  #       pwd
  #       cd yolobentoml
  #       pip install -r requirements.txt
  #   - name: Lint with flake8
  #     run: |
  #       pip install flake8
  #       cd yolobentoml
  #       # run flake8 first to detect any python syntax errors
  #       flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
  #       # run again to exit treating all errors as warnings
  #       flake8 . --count --exit-zero --max-complexity=10 --statistics

  docker-build:
    timeout-minutes: 3600
    runs-on: windows-2019
    # needs: lint

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.8'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pwd
        cd yolobentoml
        pip install -r requirements.txt

    - name: Builderand push a Bento
      id: builder-a-bento
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        cd yolobentoml
        # docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD}
        # bentoml build --containerize
        # CONTAINER_NAME=$(bentoml list 2>&1 | grep yolo_v8 | awk '{print $1}')
        # echo $CONTAINER_NAME
        # docker tag $CONTAINER_NAME ${DOCKER_USERNAME}/$CONTAINER_NAME
        # docker push ${DOCKER_USERNAME}/$CONTAINER_NAME
        docker login -u $env:DOCKER_USERNAME -p $env:DOCKER_PASSWORD
        bentoml build --containerize
        $env:CONTAINER_NAME=$(bentoml list -o json | jq -r ".[0].tag")
        echo $env:CONTAINER_NAME
        docker tag $env:CONTAINER_NAME $env:DOCKER_USERNAME/$env:CONTAINER_NAME
        docker push $env:DOCKER_USERNAME/$env:CONTAINER_NAME
