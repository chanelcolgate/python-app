# -*- coding: utf-8 -*-
"""football_training_yolov8

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1lyWapzO_hRgy-zHPdUp-vaRTgvUJ6B9k
"""

#@title ## Setup
!pip install -q ultralyticsplus
import ultralytics
ultralytics.checks()

#@title ## Download dataset
# !curl -L "https://universe.roboflow.com/ds/pF9DlmUbi0?key=jSntczmWi6" > roboflow.zip; unzip roboflow.zip; rm roboflow.zip
version = 9 # @param {type:"integer"}
!pip install roboflow

from roboflow import Roboflow
rf = Roboflow(api_key="Bl39CGIjvJw5K0JYvQZl")
project = rf.workspace("roboflow-jvuqo").project("football-players-detection-3zvbc")
version = project.version(version)
dataset = version.download("yolov8")

#@title ## Create file `data.yaml`

import yaml

path_data_yaml = "/content/football-players-detection-9/data.yaml" # @param {type:"string"}
with open(path_data_yaml, 'r') as file:
    data = yaml.safe_load(file)

data['train'] = 'train/images'
data['val'] = 'valid/images'
data['test'] = 'test/images'
with open(path_data_yaml, 'w') as file:
    yaml.dump(data, file)

#@title ## Download model ai

from ultralyticsplus import YOLO, download_from_hub

hub_model_id = "chanelcolgate/chamdiemgianhang-vsk-v2" # @param {type:"string"}

# Load a model
model_path = download_from_hub(hub_model_id)
model = YOLO(model_path)

#@title ## Download model ai

from ultralytics import YOLO

hub_model_id = "yolov5s.yaml" # @param {type:"string"}

# Load a model
# model_path = download_from_hub(hub_model_id)
model = YOLO(hub_model_id)

#@title ## Training
epochs = 100 # @param {type:"integer"}

model.train(data=path_data_yaml, batch=32, task='detect', model='train', epochs=epochs)

metrics = model.val(data=path_data_yaml, split='test')
print(metrics.results_dict)

#@title ## Push to Hub Hugging-Face

import os
import platform
from packaging.version import Version
from huggingface_hub.utils._errors import HfHubHTTPError
from ultralyticsplus import push_to_hfhub

# run following lines if linux and python major == 3 and python minor == 10 (python micor can be anything)
# hf_token = os.getenv("HF_TOKEN")
HF_TOKEN = "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" # @param {type:"string"}
HF_MODEL_ID = "chanelcolgate/football-analysis-v1" # @param {type:"string"}
SAVE_DIR = "runs/detect/train" # @param {type:"string"}

if HF_TOKEN is None:
    raise ValueError("Please set HF_TOKEN environment variable to your HuggingFace token.")
print("push to hub started")
try:
    push_to_hfhub(
        hf_model_id=HF_MODEL_ID,
        exp_dir=SAVE_DIR,
        hf_token=HF_TOKEN,
        hf_private=False,
        hf_dataset_id="chanelcolgate/yenthienviet",
        thumbnail_text="YOLOv8s Cham diem giam hang Detection",
    )
    print("push to hub succeeded")
except HfHubHTTPError as e:
    print("push to hub failed")
    print(e)